<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Manas Kashyap</title>
    <description>A Developer at building phase.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 14 Jun 2019 13:38:34 +0530</pubDate>
    <lastBuildDate>Fri, 14 Jun 2019 13:38:34 +0530</lastBuildDate>
    <generator>Jekyll v3.8.4</generator>
    
      <item>
        <title>Basics Of Gitlab Installation</title>
        <description>&lt;p&gt;In this Blog, I will be sharing a quick guide on how to install Gitlab in your Debian system.&lt;/p&gt;

&lt;p&gt;Ever thought How &lt;a href=&quot;http://github.com/&quot;&gt;http://github.com&lt;/a&gt; , &lt;a href=&quot;https://gitlab.com/&quot;&gt;https://gitlab.com&lt;/a&gt;  works , or how can i create my own Version control system locally for just my use and testing , or ever want to create personalised git instance like  &lt;a href=&quot;http://github.com/&quot;&gt;http://github.com&lt;/a&gt; , [https://gitlab.com]( for your group of contributors or developers .&lt;/p&gt;

&lt;p&gt;Well you are at right place and at the end of the blog you can make your own git instance or you can say your own Version Control System .&lt;/p&gt;

&lt;p&gt;I have personally used a Debian unstable Linux container system for this whole installation process . 
i suggest to use a server based container , of Debian unstable .&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Don’t use Docker container for this installation process , there are docker pre made  &lt;a href=&quot;https://hub.docker.com/search?q=gitlab&amp;amp;type=image/&quot;&gt;container&lt;/a&gt;  available to use which can run as Gitlab server, just do “&lt;/em&gt;docker pull container_required*” **&lt;/p&gt;

&lt;h2 id=&quot;what-is-gitlab-or-vcs-&quot;&gt;What is Gitlab or VCS ?&lt;/h2&gt;

&lt;p&gt;The full form of VCS is Version Control System , these systems are a category of software tools that help a software team manage changes to source code over time. Version control software keeps track of every modification to the code in a special kind of database. If a mistake is made, developers can turn back the clock and compare earlier versions of the code to help fix the mistake while minimising disruption to all team members.&lt;/p&gt;

&lt;p&gt;VCS are sometimes known as SCM (Source Code Management) tools or RCS (Revision Control System). One of the most popular VCS tools in use today is called Git .&lt;/p&gt;

&lt;p&gt;GitLab is a single application for the entire software development lifecycle. From project planning and source code management to CI/CD, monitoring, and security.&lt;/p&gt;

&lt;p&gt;To know more read the official &lt;a href=&quot;https://about.gitlab.com&quot;&gt;Documentation&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That’s too much of info, get me to the installation part&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;so-how-and-what-are-we-going-to-do-in-this-installation-&quot;&gt;So how and what are we going to do in this installation ?&lt;/h2&gt;

&lt;p&gt;In my words what are we going to do is install Gitlab package of Debian in the Debian system with a little configuration and then install Gitlab runner so that the Continuous Integration and Development can be done with the help of .gitlab-ci.yml file .&lt;/p&gt;

&lt;h5 id=&quot;so-the-first-thing-is-to-use-a-debian-unstable-container--i-am-using-lxc-container-here--there-are-many-ways-to-install-lxc--please-visit-their-page-to-install-it-&quot;&gt;so the first thing is to use a Debian unstable container , i am using &lt;a href=&quot;https://linuxcontainers.org/&quot;&gt;lxc&lt;/a&gt; container here , there are many ways to install lxc , please visit their page to install it .&lt;/h5&gt;

&lt;p&gt;As , when i was starting with lxc , i was facing a few issues due to lxc configuration file , how to bridge and what not to , so i am attaching my lxc configuration that i use .&lt;/p&gt;

&lt;p&gt;you can edit it too by going in &lt;strong&gt;/etc/lxc/default.conf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lxc.net.0.type = veth&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;lxc.apparmor.profile = generated&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;lxc.apparmor.allow_nesting = 1&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;lxc.net.0.link = virbr0&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;lxc.net.0.flags = up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once lxc is configured you can download the unstable container using &lt;code class=&quot;highlighter-rouge&quot;&gt;lxc-create -n gitlab -t debian -- -r unstable&lt;/code&gt;and then start it with &lt;code class=&quot;highlighter-rouge&quot;&gt;lxc-start -n gitlab&lt;/code&gt; and then just proceed into it using &lt;code class=&quot;highlighter-rouge&quot;&gt;lxc-attach -n gitlab&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;**TIP :-  sometimes while searching for this configuration , you will found terms like , lxc.network.type , those are old lxc terms , if you are using lxc 2.1 or above the terms change to lxc.net.0 and else , if you have been using old lxc and update to new one and configuration fails , you don’t need to panic , just do &lt;code class=&quot;highlighter-rouge&quot;&gt;lxc-update-config&lt;/code&gt;  and its done , the old configuration will change to new configuration . **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Once you are inside the container or the unstable server that you choose , 
do the following &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade&lt;/code&gt;(assuming you are having the super user permission )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;**TIP :-  sometimes while doing apt-update and apt-upgrade in lxc container you will have the issue of not connecting with deb.debian.org , i faced this issue , this is because of sources.list permissions , change the permission of the file using &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod o+r /etc/apt/sources.list&lt;/code&gt; **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now the task is to add &lt;a href=&quot;https://www.debian.org/doc/debian-policy/ch-archive#s-contrib&quot;&gt;contrib&lt;/a&gt; section in the sources.list . 
Now your sources.list will look like this if you do &lt;code class=&quot;highlighter-rouge&quot;&gt;cat /etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;deb http://deb.debian.org/debian unstable main contrib non-free&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;deb-src http://deb.debian.org/debian unstable main contrib non-free&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now let’s install the &lt;a href=&quot;https://tracker.debian.org/pkg/gitlab&quot;&gt;gitlab&lt;/a&gt; package .&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get update &amp;amp;&amp;amp; apt-get install upgrade &amp;amp;&amp;amp; apt-get install apt-utils &amp;amp;&amp;amp; apt-get install gitlab&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The installation is big and will take time so be patient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When it will be installing it will ask for some config questions , the questions are self explanatory and will tell you what to enter and it has example of it , i run gitlab instance in my local system , so i have named the gitlab instance as gitlab.lxc (while they ask you , you can give any name like git.yourname.com , it all depends on the domain name you buy for this) and i used local host for database configuration well they give you an option of new host where you can enter the database configuration of the other database system you are using . 
And then it will run a few check and it will be done&lt;/p&gt;

&lt;p&gt;you can check the status of Gitlab using &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl status gitlab.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now as this Gitlab instance is installed on the container system , we have to update the host of the container and also the systems where you want to see this gitlab instance running to resolve the git.yourusername.com 
you can view the container ip address using ip a 
and add that ip address in /etc/hosts of the container as well as in the systems to resolve the gitlab instance name . 
&lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.122.104 gitlab.lxc # Change ip address and the name of the gitlab instance you gave&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We are updating the containers host too because when we will try to setup gitlab runner , it cant resolve the instance gitlab name , so we are setting it up .&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now in the system where you want to view you can view the git instance running by typing the url in the browser like “http://gitlab.lxc” depending on your gitlab instance name and whether you have https setup or not which will be asked by gitlab while configuring and installing .&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you have your own Gitlab instance , just register to it , till the time you have your won domain registered and set you wont get any mail for confirmation or anything .&lt;/p&gt;

&lt;p&gt;But you can login to the system with the registered ID and password , and create your project , but till now we haven’t setup a runner to run any Gitlab CI , CD process so , we will do it with the help of &lt;a href=&quot;https://tracker.debian.org/pkg/gitlab-runner&quot;&gt;gitlab-runner&lt;/a&gt; package available .&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get install gitlab-ci-multi-runner&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;it will install the runner .&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Now get into  admin panel of your own Gitlab instance .&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wait , how to do it and where is my admin panel ?&lt;/em&gt; if these questions are coming into mind , well here is the answer , now go back to the container or server where you installed Gitlab .&lt;/p&gt;

&lt;p&gt;now just remember the mail id of the person you want to give the admin access to and follow the steps&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Granting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;existing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;======================================&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;steps&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;involve&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dropping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gitlab&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;production&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;running&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;following&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runuser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gitlab&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cd /usr/share/gitlab &amp;amp;&amp;amp; . /etc/gitlab/gitlab-debian.conf &amp;amp;&amp;amp; export DB RAILS_ENV &amp;amp;&amp;amp; bundle exec rails console production'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'useraddress@domain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;irb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you have the admin access , and you can view it in your instance too when you login to gitlab instance with the email id that you gave just now giving the admin access , there will be a sign of setting on the upside and you can click and go into the admin panel which will show number of users and all .&lt;/p&gt;

&lt;p&gt;Now go into the runner option on the side bar and you will have the token there&lt;/p&gt;

&lt;p&gt;Now to register the runner ,&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Run the following command:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo gitlab-runner register
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter your GitLab instance URL:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com )
 https://gitlab.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter the token you obtained to register the Runner:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the gitlab-ci token for this runner
 xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter a description for the Runner, you can change this later in GitLab’s UI:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the gitlab-ci description for this runner
 [hostname] my-runner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter the &lt;a href=&quot;https://docs.gitlab.com/ee/ci/runners/#using-tags&quot;&gt;tags associated with the Runner&lt;/a&gt;, you can change this later in GitLab’s UI:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the gitlab-ci tags for this runner (comma separated):
 my-tag,another-tag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter the &lt;a href=&quot;https://docs.gitlab.com/runner/executors/README.html&quot;&gt;Runner executor&lt;/a&gt;:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:
 docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you chose Docker as your executor, you’ll be asked for the default image to be used for projects that do not define one in &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt;:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Please enter the Docker image (eg. ruby:2.1):
 alpine:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And with this you will have your shared runner setup with which you can run CI &amp;amp; CD .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tip :- When you want to run CI and CD please see the internet connection is strong as it will download the container and will work on it .&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And with this , now you have your own gitlab instance running with the CI &amp;amp; CD enabled .&lt;/p&gt;

&lt;h5 id=&quot;i-know-this-blog-or-the-steps-i-gave-may-or-may-not-worked-for-you--this-is-all-based-on-my-personal-experience-to-work-on-the-debian-unstable-machine-installation-process--if-you-think-you-have-a-query-or-doubt-feel-free-to-reach-me-in-mail-or-telegram-or-riot--hope-i-can-help-you-with-that-or-if-you-find-any-flaw-in-my-blog--reach-me-out-&quot;&gt;&lt;strong&gt;I know this blog or the steps i gave may or may not worked for you , this is all based on my personal experience to work on the Debian unstable machine installation process , if you think you have a query or doubt feel free to reach me in mail or telegram or riot , hope i can help you with that or if you find any flaw in my blog , reach me out .&lt;/strong&gt;&lt;/h5&gt;

&lt;h5 id=&quot;hope-it-helps-you-all&quot;&gt;&lt;strong&gt;Hope it helps you all.&lt;/strong&gt;&lt;/h5&gt;

&lt;p&gt;[]:&lt;/p&gt;

</description>
        <pubDate>Fri, 14 Jun 2019 00:00:00 +0530</pubDate>
        <link>http://localhost:4000/2019/06/14/Basics-of-gitlab-installation/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/06/14/Basics-of-gitlab-installation/</guid>
        
        
      </item>
    
      <item>
        <title>Which Linux OS/Distro to use ??</title>
        <description>&lt;p&gt;In this Blog, I am going to answer the most asked question by me that &lt;em&gt;“Which Distro i should start with ?”&lt;/em&gt; and &lt;em&gt;“Which Distro you use ?”&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;p&gt;So , Lets start .&lt;/p&gt;

&lt;p&gt;If you are the person right now who is thinking &lt;em&gt;“Why Linux ? , Why i have to use Linux? what is Linux?? and so so”&lt;/em&gt; , then don’t worry , just check this &lt;a href=&quot;https://manas-kashyap.github.io/jekyll/2018/11/03/Why-linux/&quot;&gt;Blog&lt;/a&gt; . 
Hope it helps you in getting the answers that you are thinking now .&lt;/p&gt;

&lt;h2 id=&quot;what-i-meant-by-linux-distroosflavor-&quot;&gt;What i meant by Linux Distro/OS/Flavor ?&lt;/h2&gt;

&lt;p&gt;Distro is IT vernacular for a Linux operating system (OS). It is a shortened version of the term distribution.&lt;/p&gt;

&lt;p&gt;In the Linux world, there are hundreds of different flavors of distro. Examples include Debian, Ubuntu and Red Hat (among many others).&lt;/p&gt;

&lt;p&gt;Technically, a distribution is any deployment of software and isn’t specifically Linux. Usually in this case you’ll hear it referred to as a “distribution of software.” Despite this, the term “distro” is nearly always used in a Linux context. So, while a distribution of software is a generic term for any bundle of software, distro is nearly always a flavor of Linux.&lt;/p&gt;

&lt;h2 id=&quot;what-linux-distro-i-should-use-as-a-beginner-&quot;&gt;What Linux distro i should use as a beginner ?&lt;/h2&gt;

&lt;p&gt;For those folks who are going to open the door of Linux  for the first time, the choice of various distributions or ‘flavours’ of Linux can be truly overwhelming, especially if you’re not sure what to look for.&lt;/p&gt;

&lt;p&gt;In the early days of Linux, choosing a distribution (distro) was much simpler. You usually selected one you had heard about or with which you had a small amount of experience. There were also far fewer choices beyond Red Hat Linux, Debian and Slackware.&lt;/p&gt;

&lt;p&gt;While you can still make a choice based on these criteria, the sheer number of Linux distros available now, and their ever vocal fan bases, makes it difficult to settle on one and get started.&lt;/p&gt;

&lt;p&gt;But, to start with i suggest , &lt;a href=&quot;3&quot;&gt;Linux Mint&lt;/a&gt; over &lt;a href=&quot;2&quot;&gt;Ubuntu&lt;/a&gt; or &lt;a href=&quot;3&quot;&gt;Kali&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;According to me your first OS should be a playground for you to research things and play with Linux , and for me Linux Mint was one of that playground i found. It’s really user friendly and easy to use , plus a good stability is there which doesn’t let the system die out of your experiments.&lt;/p&gt;

&lt;p&gt;And , once you get to know about the Linux file systems and get a basic grip of how things work, you can shift to some unstable machines like  &lt;a href=&quot;8&quot;&gt;Debian SID&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://linuxmint.com/download.php&quot;&gt;Link to Download Linux MInt&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;why-a-beginner-shouldnt-use-kali-linux&quot;&gt;Why a Beginner shouldn’t use Kali Linux&lt;/h2&gt;

&lt;p&gt;Here, Beginner mean the one who doesn’t know about Linux file systems and never used it.&lt;/p&gt;

&lt;p&gt;So, while installing Kali Linux i faced a lot of problem when i was a beginner and using it was a mess as i had to know about terminals, tools and Linux files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Kali Linux is good for hacking? why so ?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yeah , it is as all the tools are auto installed and have configured default to give the user a good Pen testing and security analysis experience.&lt;/p&gt;

&lt;p&gt;But, i say why Kali Linux ?? every tool can be installed in other Linux systems too , yeah you have to do it manually but it will help you in knowing about the configurations of the tools that you are going to use.&lt;/p&gt;

&lt;p&gt;This will help you in getting a good grip with Linux file systems which will help you in getting a knowledge of what is going on with my system when i do something.&lt;/p&gt;

&lt;h2 id=&quot;which-linux-distro-i-have-used-and-i-am-using-currently&quot;&gt;Which Linux distro I have used and I am using currently&lt;/h2&gt;

&lt;p&gt;Till date i have used many different distros of linux , i have used &lt;a href=&quot;https://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; , &lt;a href=&quot;https://linuxmint.com/&quot;&gt;Linux mint&lt;/a&gt; , &lt;a href=&quot;http://hamaralinux.org&quot;&gt;Hamara Linux&lt;/a&gt; , &lt;a href=&quot;https://www.archlinux.org/&quot;&gt;arch linux&lt;/a&gt; , &lt;a href=&quot;https://www.kali.org/&quot;&gt;kali&lt;/a&gt; , &lt;a href=&quot;https://www.debian.org&quot;&gt;Debian&lt;/a&gt; and many more.&lt;/p&gt;

&lt;p&gt;Yeah , i was a &lt;a href=&quot;https://www.urbandictionary.com/define.php?term=distrohopper&quot;&gt;Distro Hopper&lt;/a&gt; , as i was searching for one OS which suits my need .&lt;/p&gt;

&lt;p&gt;Currently, I am using &lt;a href=&quot;https://www.debian.org/releases/sid/&quot;&gt;Debian SID&lt;/a&gt; , yeah its one of the Unstable systems Debian has, I use it as I need my OS to be updated with new packages and not to be waiting till a new release, plus I do a lot of &lt;a href=&quot;https://manas-kashyap.github.io/jekyll/2018/11/11/Basic-Guide-for-Debian-Packaging/&quot;&gt;Debian packaging&lt;/a&gt; and for that, I need Debian SID machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HOPE IT HELPS YOU !!&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Nov 2018 03:30:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/14/Which-Linux-OS-to-use/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/14/Which-Linux-OS-to-use/</guid>
        
        <category>linux</category>
        
        <category>Open source</category>
        
        <category>Distro</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Basic Guide for Debian Packaging</title>
        <description>&lt;p&gt;In this Blog, I am going to give a small peek in the vast world of Debian Packaging , and how to start with and why i do packaging .&lt;/p&gt;

&lt;p&gt;So , Lets Start !!&lt;/p&gt;

&lt;h2 id=&quot;what-is-debian-&quot;&gt;What is Debian ?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.debian.org&quot;&gt;Debian&lt;/a&gt; is an universal Linux based operating system .&lt;/p&gt;

&lt;p&gt;Debian systems currently use the &lt;a href=&quot;https://www.kernel.org/&quot;&gt;Linux&lt;/a&gt; kernel or the &lt;a href=&quot;https://www.freebsd.org/&quot;&gt;FreeBSD&lt;/a&gt; kernel.&lt;/p&gt;

&lt;p&gt;The need of people is application software: programs to help them get what they want to do done, from editing documents to running a business to playing games to writing more software. Debian comes with over 51000 &lt;a href=&quot;https://www.debian.org/distrib/packages&quot;&gt;packages&lt;/a&gt; (precompiled software that is bundled up in a nice format for easy installation on your machine), a package manager (APT), and other utilities that make it possible to manage thousands of packages on thousands of computers as easily as installing a single application. All of it &lt;a href=&quot;https://www.debian.org/intro/free&quot;&gt;free&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It’s like a tower. At the base is the kernel. On top of that are all the basic tools. Next is all the software that you run on the computer. At the top of the tower is Debian carefully organising and fitting everything so it all works together.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is an Operating system ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An operating system is the set of basic programs and utilities that make your computer run. 
At the core of an operating system is the kernel. The kernel is the most fundamental program on the computer and does all the basic housekeeping and lets you start other programs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://manas-kashyap.github.io/jekyll/2018/11/03/Why-linux/&quot;&gt;Still thinking why to use linux ??&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-meant-by-debian-packaging&quot;&gt;What is meant by Debian Packaging?&lt;/h2&gt;

&lt;p&gt;Ever done &lt;em&gt;sudo apt install (anything)&lt;/em&gt; ??&lt;/p&gt;

&lt;p&gt;Wondered how apt install works and what file it fetches and how the file gets auto installed ?? 
So , here comes the Debian Packaging task. 
The aim of packaging is to allow the automation of installing, upgrading, configuring, and removing computer programs for Debian in a consistent manner.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To be simple , its like making .deb of any software or module like in windows we have .exe file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By doing Debian packaging we make Debian packages , which is a collection of files that allow for applications or libraries to be distributed via the Debian package management system.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.debian.org/Packaging&quot;&gt;More info&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;enough-of-this--knowledge--get-me-to-the-coding-part-and-lets-do-the--packaging&quot;&gt;&lt;u&gt;Enough of this  knowledge , get me to the coding part and lets do the  packaging&lt;/u&gt;&lt;/h4&gt;

&lt;h2 id=&quot;lets-start-with-prerequisites-needed-to-do-the-work-&quot;&gt;Lets start with Prerequisites needed to do the work .&lt;/h2&gt;

&lt;p&gt;So , To start with Debian packaging , we need a &lt;a href=&quot;https://www.debian.org/releases/sid/&quot;&gt;Debian SID&lt;/a&gt; environment  .&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Oops , i have an ubuntu/arch/gentoo/mac machine and installing another OS , nah , not ready for a new OS&lt;/em&gt; - its thats what you are thinking now , don’t worry we have &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; , &lt;a href=&quot;https://linuxcontainers.org/lxc/introduction/&quot;&gt;lxc&lt;/a&gt; or &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;virtual machine&lt;/a&gt;   for you .&lt;/p&gt;

&lt;p&gt;See instructions given below to setup Debian Sid.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;LXC - &lt;a href=&quot;https://wiki.debian.org/Packaging/Pre-Requisites#LXC&quot;&gt;https://wiki.debian.org/Packaging/Pre-Requisites#LXC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Docker - &lt;a href=&quot;https://wiki.debian.org/Packaging/Pre-Requisites#Docker&quot;&gt;https://wiki.debian.org/Packaging/Pre-Requisites#Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Virtual Machine - &lt;a href=&quot;https://wiki.debian.org/Packaging/Pre-Requisites#Virtual_Machine&quot;&gt;https://wiki.debian.org/Packaging/Pre-Requisites#Virtual_Machine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I personally prefer Docker, and when I started with Debian packaging , I started with Docker container.&lt;/p&gt;

&lt;h5 id=&quot;tips--for-linux-users--who-uses-apt-package-manager--to-install-docker-is-now-really-easy--just-do-sudo-apt-install-dockerio&quot;&gt;Tips : for Linux users , who uses apt package manager , to install docker is now really easy , just do “sudo apt install docker.io”&lt;/h5&gt;

&lt;p&gt;You can go with the above setup link or the way i installed .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My way of installation of Docker SID environment&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Work to be done&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Code&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Pull Debian Sid image from docker hub using the following command&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;docker pull debian:sid&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Create a container with it and start bash on it&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;docker run - -privileged - -name “sid” -it debian:sid /bin/bash&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Update and upgrade to latest versions of packages&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Exit after your work is done.&lt;/p&gt;

&lt;p&gt;If you need to connect to it later, use the following commands which will take you to the bash prompt.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“sudo docker start sid &amp;amp;&amp;amp; sudo docker attach sid”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;Now , we need tools to work with&lt;/u&gt;&lt;/strong&gt; &lt;strong&gt;:-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install packaging tools inside the container
&lt;code class=&quot;highlighter-rouge&quot;&gt;# apt-get install dh-make&lt;/code&gt; OR
&lt;code class=&quot;highlighter-rouge&quot;&gt;# apt-get install gem2deb&lt;/code&gt; OR
&lt;code class=&quot;highlighter-rouge&quot;&gt;# apt-get install npm2deb&lt;/code&gt; as required.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;# apt-get install git-buildpackage sbuild dh-buildinfo quilt lintian&lt;/code&gt; these packages are must to be installed.&lt;/p&gt;

&lt;p&gt;For Nodejs modules, use &lt;code class=&quot;highlighter-rouge&quot;&gt;npm2deb&lt;/code&gt;; for ruby gems, use &lt;code class=&quot;highlighter-rouge&quot;&gt;gem2deb&lt;/code&gt;; for go packages, use &lt;code class=&quot;highlighter-rouge&quot;&gt;dh-make-golang&lt;/code&gt;. If there is no tool specific to a language, &lt;code class=&quot;highlighter-rouge&quot;&gt;dh-make&lt;/code&gt; can be used as a generic tool for any language.&lt;/p&gt;

&lt;h3 id=&quot;still-having-an-issue-with-setting-up-things-&quot;&gt;Still having an issue with setting up things ?&lt;/h3&gt;

&lt;p&gt;Join our real-time chat group using one of the 4 options and say hi. If you have difficulty with pre-requisites please ask here or on chat rooms.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Matrix: #debian-browserify:diasp.in&lt;/li&gt;
  &lt;li&gt;IRC: #debian-browserify on irc.oftc.net&lt;/li&gt;
  &lt;li&gt;Telegram: &lt;a href=&quot;https://t.me/debian_browserify&quot;&gt;https://t.me/debian_browserify&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are new to these technologies, I suggest you try matrix, see &lt;a href=&quot;https://matrix.org/&quot;&gt;https://matrix.org&lt;/a&gt; for details. &lt;a href=&quot;https://riot.im/&quot;&gt;https://riot.im&lt;/a&gt; has a list of apps you can use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://webchat.oftc.net/?channels=debian-browserify&amp;amp;uio=MT11bmRlZmluZWQb1&quot;&gt;http://webchat.oftc.net/?channels=debian-browserify&amp;amp;uio=MT11bmRlZmluZWQb1&lt;/a&gt; to join the IRC room&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Okay to start with packaging, start with nodejs packages and understand the workflow and then you can shift with other language modules and then to higher multi language modules.&lt;/em&gt;&lt;/strong&gt; - &lt;a href=&quot;http://wiki.debian.org/ManasKashyap&quot;&gt;Manas Kashyap&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;Lets , do it then ?&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install a text editor (I like vim , for installation run sudo apt install vim ) and
update .bashrc of docker container with the following environment variables&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export DEBEMAIL=your@email.domain
export DEBFULLNAME='Your Name'
alias lintian='lintian -iIEcv --pedantic --color auto'
alias git-import-dsc='git-import-dsc --author-is-committer --pristine-tar'
alias clean='fakeroot debian/rules clean'
export LANG=C.UTF-8
export LC_ALL=C.UTF-8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Command ls -la shows the hidden .bashrc file , to edit with vim do vim .bashrc and
add the above and the very end , update your current environment by running&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;vim tips&lt;/strong&gt;
&lt;strong&gt;i – insert mode to enter text ,&lt;/strong&gt;
&lt;strong&gt;:wq – write and exit ,:q!– exit without saving&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Setup username and email address for git&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git config –global user.name “Your name”&lt;/em&gt;
&lt;em&gt;git config –global user.email email@domain.tld&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;workflow-we-are-taking-example-of-node-module-qw&quot;&gt;workflow (we are taking example of node module &lt;a href=&quot;https://www.npmjs.com/package/qw&quot;&gt;qw&lt;/a&gt;)&lt;/h4&gt;

&lt;p&gt;1) Check depedency use npm2deb depends&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm2deb depends -b -r qw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Module qw has no dependencies.&lt;/em&gt;
&lt;em&gt;Here qw has no depedencies&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2) Search for existing work using npm2deb search&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm2deb search qw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Looking for similiar package:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;None&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Looking for existing repositories:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;None&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Looking for wnpp bugs:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;None&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Output shows no existing work and one can start work on it&lt;/p&gt;

&lt;p&gt;3) Preview more info using npm2deb view&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm2deb view qw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Version: 1.0.1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Description: None&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Homepage: https://github.com/iarna/node-qw#readme&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;License: ISC&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Debian: None (None)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;License is automatically recognize as BSD, if this does not happen, please&lt;/em&gt;
&lt;em&gt;pass&lt;/em&gt;
&lt;em&gt;–upstream-license option during creation to set a correct license.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;4) Automate debian package creation using npm2deb create .&lt;/p&gt;

&lt;p&gt;npm2deb fails to do it completely ,our job is to fix those error which is shown by the prefix FIX_ME&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm2deb create qw
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‘You may want fix first these issues:&lt;/p&gt;

&lt;p&gt;qw/node-qw-1.0.1/debian/control:Description: FIX_ME write the Debian package description&lt;/p&gt;

&lt;p&gt;qw/node-qw_itp.mail:Subject: ITP: node-qw – FIX_ME write the Debian package description&lt;/p&gt;

&lt;p&gt;ls command shows npm2deb created a dir called qw ,&lt;/p&gt;

&lt;p&gt;change directory to qw, It has the following contents&lt;/p&gt;

&lt;p&gt;$ ls&lt;/p&gt;

&lt;p&gt;qw&lt;/p&gt;

&lt;p&gt;$ cd qw/&lt;/p&gt;

&lt;p&gt;$ ls&lt;/p&gt;

&lt;p&gt;node-qw
node-qw-1.0.1.tar.gz
node-qw_1.0.1-1.dsc
qw_1.0.1- 1_amd64.buildinfo node-qw_1.0.1.orig.tar.gz
node-qw-1.0.1 node-qw_1.0.1-1.debian.tar.xz node-qw_1.0.1-1_all.deb
node- qw_1.0.1-1_amd64.changes node-qw_itp.mail&lt;/p&gt;

&lt;p&gt;&lt;u&gt;node-qw is a temporary folder created by npm2deb its better to delete it to avoid confusion later&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;$ rm -rf node-qw&lt;/p&gt;

&lt;p&gt;5) Import package to git&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gbp import-dsc --pristine-tar node-qw_1.0.1-1.dsc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;now we get a new dir called node-qw which is git tracked , cd into the new created dir node-qw and see git branch and git tag&lt;/p&gt;

&lt;p&gt;$ git branch&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;master&lt;/p&gt;

    &lt;p&gt;pristine-tar&lt;/p&gt;

    &lt;p&gt;upstream&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;$ git tag&lt;/p&gt;

&lt;p&gt;debian/1.0.1-1&lt;/p&gt;

&lt;p&gt;upstream/1.0.1&lt;/p&gt;

&lt;p&gt;Delete the debian tag by running git tag -d debian/1.0.1-1&lt;/p&gt;

&lt;p&gt;6) File ITPFiling itp is a method by which we take ownership of the module by mailing to submit@bugs.debian.org , in return we get a bug number , a sample mailing templete is created by npm2deb for our use&lt;/p&gt;

&lt;p&gt;$ cat node-qw_itp.mail (to view the template )&lt;/p&gt;

&lt;p&gt;update the template by fixing the error with the prefix FIX_ME:&lt;/p&gt;

&lt;p&gt;sample itp is attached below https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=881423&lt;/p&gt;

&lt;p&gt;7) Make package lintian clean&lt;/p&gt;

&lt;p&gt;/qw/node-qw$ ls&lt;/p&gt;

&lt;p&gt;LICENSE README.md debian package.json qw.js test&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/qw/node-qw$ dpkg-buildpackage &amp;amp;&amp;amp; lintian ../node-qw_1.0.1-1.dsc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;lintian points out the errors we need to fix&lt;/p&gt;

&lt;p&gt;I: node-qw source: file-contains-fixme-placeholder debian/control:20  FIX_ME&lt;/p&gt;

&lt;p&gt;W: node-qw source: out-of-date-standards-version 4.1.1 (current is 4.2.1)&lt;/p&gt;

&lt;p&gt;places where errors where fixed regarding this module&lt;/p&gt;

&lt;p&gt;debian/control&lt;/p&gt;

&lt;p&gt;debian/copyright&lt;/p&gt;

&lt;p&gt;debian/changelog&lt;/p&gt;

&lt;p&gt;make sure to commit your changes as they are fixed by using the git command&lt;/p&gt;

&lt;p&gt;git commit -m “ commnet description” path/of/fixed/file&lt;/p&gt;

&lt;p&gt;for reference -https://salsa.debianorg/js-team/node-qw.git/tree/&lt;/p&gt;

&lt;p&gt;8) Enable tests if present any , find the test command from package.json&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ cat package.json

  {
  &quot;name&quot;: &quot;qw&quot;,
  &quot;version&quot;: &quot;1.0.1&quot;,
  &quot;description&quot;: &quot;Quoted word literals!&quot;,
  &quot;main&quot;: &quot;qw.js&quot;,
  &quot;scripts&quot;: {
  &quot;test&quot;: &quot;tap test&quot;
  },
  &quot;keywords&quot;: [],
  &quot;author&quot;: &quot;Rebecca Turner &amp;lt;me@re-becca.org&amp;gt; (http://re-
  becca.org/)&quot;,
  &quot;license&quot;: &quot;ISC&quot;,
  &quot;devDependencies&quot;: {
  &quot;tap&quot;: &quot;^8.0.0&quot;
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add the test command under override_dh_auto_test from debian/rules&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;override_dh_auto_test:

 tap -J test/*.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;add the test framework (mocha, node-tape etc) as a build dependency in&lt;/p&gt;

&lt;p&gt;debian/control&lt;/p&gt;

&lt;p&gt;Build-Depends:&lt;/p&gt;

&lt;p&gt;debhelper (&amp;gt;= 9)&lt;/p&gt;

&lt;p&gt;, dh-buildinfo, nodejs&lt;/p&gt;

&lt;p&gt;, node-tap&lt;/p&gt;

&lt;p&gt;Standards-Version: 4.1.2&lt;/p&gt;

&lt;p&gt;add a Test-Command section to debian/tests/control&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat tests/control
  Tests: require
  Depends: node-qw
  Test-Command: tap -J test/*.js
  Depends: @, node-tap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;reference link ;-https://salsa.debian.org/js-team/node-qw.git/tree/debian&lt;/p&gt;

&lt;p&gt;run dpkg-buildpackage and check if the tests ran sucessfully and change debian/changelog to release by running dch -r.&lt;/p&gt;

&lt;p&gt;9) upload to https://salsa.debian.org ( as the team maintains it)&lt;/p&gt;

&lt;p&gt;create a new project as per your node-module name&lt;/p&gt;

&lt;p&gt;git remote add origin git@salsa.debian.org:username/node-module-name.git (eg link)&lt;/p&gt;

&lt;p&gt;git push -u origin –all –follow-tags&lt;/p&gt;

&lt;p&gt;this is a temporary repo once you mature ,will get official repo access&lt;/p&gt;

&lt;p&gt;10) Clean build with sbuild&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo sbuild-adduser $LOGNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;… &lt;em&gt;logout&lt;/em&gt; and &lt;em&gt;re-login&lt;/em&gt; or use &lt;code class=&quot;highlighter-rouge&quot;&gt;newgrp sbuild&lt;/code&gt; in your current shell$ sudo sbuild-createchroot –include=eatmydata,ccache,gnupg unstable&lt;/p&gt;

&lt;p&gt;/srv/chroot/unstable-amd64-sbuild http://deb.debian.org/debian&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sudo sbuild -A -d unstable ../node-qw_1.0.1-1.dsc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;11)Install deb package&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  apt-get install autopkgtest
  dpkg -i ../node-qw_1.0.1-1_all.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;why-i-do-debian-packaging-and-how-it-helped-me-&quot;&gt;Why i do Debian Packaging and how it helped me ?&lt;/h2&gt;

&lt;p&gt;I do Debian Packaging, because it helps me to learn about languages , Linux systems etc , and also its one of the way to contribute to a bigger Open Source project. Plus, it makes you feel good when something you made is used by 100 of other people.&lt;/p&gt;

&lt;p&gt;How it helped me ? yeah , it helped me to make a name in open source field. 
Helped me to be part of communities and gave me opportunities to get mentored by some known guys , Like &lt;a href=&quot;https://qa.debian.org/developer.php?login=Praveen@debian.org&quot;&gt;Praveen&lt;/a&gt; , &lt;a href=&quot;https://qa.debian.org/developer.php?login=rajudev@disroot.org&quot;&gt;Raju&lt;/a&gt; , etc.&lt;/p&gt;

&lt;p&gt;Want to see my work , here is the &lt;a href=&quot;https://qa.debian.org/developer.php?login=manaskashyaptech@gmail.com&quot;&gt;qa page&lt;/a&gt; and here is the &lt;a href=&quot;https://salsa.debian.org/Manas-kashyap-guest&quot;&gt;salsa page&lt;/a&gt; where Debian works (&lt;em&gt;oh , i forgot , Debian has its own has self hosted git instance like &lt;a href=&quot;http://github.com&quot;&gt;github&lt;/a&gt; , &lt;a href=&quot;http://salsa.debian.org&quot;&gt;salsa&lt;/a&gt; is there , isn’t it cool&lt;/em&gt; :-p )&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;This Blog is just a peek into packaging and how i started and where to get help , etc .&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hope it helps you&lt;/strong&gt; &lt;strong&gt;!!&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 11 Nov 2018 15:00:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/11/Basic-Guide-for-Debian-Packaging/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/11/Basic-Guide-for-Debian-Packaging/</guid>
        
        <category>linux</category>
        
        <category>Debian</category>
        
        <category>Packaging</category>
        
        <category>Open source</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Basic Linux Commands -1</title>
        <description>&lt;p&gt;In this Blog, I am going to tell 10 Basic Linux Commands. 
This Blog is part of a series that is going to be released soon .&lt;/p&gt;

&lt;h2 id=&quot;what-is-linux&quot;&gt;What is Linux?&lt;/h2&gt;
&lt;p&gt;Linux is best known as the most used open source operating system.&lt;/p&gt;

&lt;p&gt;We use the term “Linux” to refer to the Linux kernel, but also the set of programs, tools, and services that are typically bundled together with the Linux kernel to provide all of the necessary components of a fully functional operating system.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://manas-kashyap.github.io/jekyll/2018/11/03/Why-linux/&quot;&gt;Why to use linux?&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-linux-command-line-shell-or-terminal-&quot;&gt;What is Linux Command Line ,shell or Terminal ?&lt;/h2&gt;

&lt;p&gt;A terminal, shell is a program that receives commands from the user and gives it to the OS to process, and it shows the output.
Linux’s shell is its main part. Its distros come in GUI (graphical user interface), but basically, Linux has a CLI (command line interface). In this tutorial, we are going to cover the basic commands that we use in the shell of Linux..&lt;/p&gt;

&lt;h4 id=&quot;to-open-the-terminal-press-ctrlaltt-in-ubuntu-debian-or-press-altf2-type-in-gnome-terminal-and-press-enter-in-raspberry-pi-type-in-lxterminal-there-is-also-a-gui-way-too-by-searching-for-terminal-in-start-menu&quot;&gt;To open the terminal, press Ctrl+Alt+T in Ubuntu, Debian, or press Alt+F2, type in gnome-terminal, and press enter. In Raspberry Pi, type in lxterminal. There is also a GUI way too by searching for terminal in start menu.&lt;/h4&gt;

&lt;h2 id=&quot;linux-commands&quot;&gt;Linux Commands&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1) ls&lt;/strong&gt; - Use the &lt;strong&gt;“ls”&lt;/strong&gt; command to know what files are in the directory you are in. You can see all the hidden files by using the command &lt;strong&gt;&lt;em&gt;“ls -a”&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) cd&lt;/strong&gt; - Use the &lt;strong&gt;“cd”&lt;/strong&gt; command to go to a directory. For example, if you are in the home folder, and you want to go to the downloads folder, then you can type in “&lt;strong&gt;&lt;em&gt;cd Downloads”&lt;/em&gt;&lt;/strong&gt;. Remember, this command is case sensitive, and you have to type in the name of the folder exactly as it is. 
But there is a problem with these commands. Imagine you have a folder named “Raspberry Pi”. In this case, when you type in “cd Raspberry Pi”, the shell will take the second argument of the command as a different one, so you will get an error saying that the directory does not exist. Here, you can use a backward slash. That is, you can use &lt;strong&gt;“cd Raspberry\ Pi”&lt;/strong&gt; in this case. Spaces are denoted like this: &lt;em&gt;If you just type “cd” and press enter, it takes you to the home directory.&lt;/em&gt; To go back from a folder to the folder before that, you can type &lt;strong&gt;“cd ..”&lt;/strong&gt; . The two dots represent back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) mkdir &amp;amp; rmdir&lt;/strong&gt; - the command when you need to create a folder or a directory. For example, if you want to make a directory called “freshers”, then you can type “&lt;em&gt;mkdir freshers”&lt;/em&gt;.
Remember, as told before, if you want to create a directory named &lt;strong&gt;&lt;em&gt;“fresher 2k18”&lt;/em&gt;&lt;/strong&gt;, then you can type &lt;em&gt;“&lt;strong&gt;mkdir freshers\ 2k18&lt;/strong&gt;”&lt;/em&gt;. 
Use &lt;strong&gt;rmdir&lt;/strong&gt; to delete a directory. But &lt;em&gt;rmdir&lt;/em&gt; can only be used to delete an empty directory. 
&lt;em&gt;To delete a directory containing files, use rm&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4) rm&lt;/strong&gt; - This command is used to delete files and directories.  Use &lt;strong&gt;“rm -r*“&lt;/strong&gt; to delete just the directory. It deletes both the folder and the files it contains when using only the rm command.&lt;/p&gt;

&lt;h4 id=&quot;warning--never-do--sudo-rm--rf--it-will-delete-all-the-files-in-your-root-directory-leading-to-shutting-down-of-system&quot;&gt;Warning:- never do , “sudo rm -rf /*”, it will delete all the files in your root directory leading to shutting down of system.&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;5) touch&lt;/strong&gt; - This command is used to create a file. It can be anything, from an empty txt file to an empty zip file. For example, “touch new.txt”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6) man &amp;amp; –help&lt;/strong&gt; - To know more about a command and how to use it, use the man command. It shows the manual pages of the command. For example, &lt;em&gt;“man cd”&lt;/em&gt; shows the manual pages of the cd command. Typing in the command name and the argument helps it show which ways the command can be used &lt;em&gt;(e.g., cd –help).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7) cp&lt;/strong&gt; - Use the &lt;em&gt;cp&lt;/em&gt; command to copy files through the command line. It takes two arguments: &lt;em&gt;The first is the location of the file to be copied, the second is where to copy&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8) mv&lt;/strong&gt; - Use the mv command to move files through the command line. &lt;em&gt;We can also use the mv command to rename a file&lt;/em&gt;. For example, if we want to rename the file “text” to “new”, we can use “mv text new”. It takes the two arguments, just like the cp command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9) cat&lt;/strong&gt; - Use the cat command to display the contents of a file. It is usually used to easily view programs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10) uname&lt;/strong&gt; - Use uname to show the information about the system your Linux distro is running. Using the command “uname -a” prints most of the information about the system. This prints the kernel release date, version, processor type, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;Tips and Tricks for Using Linux Command Line&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use the clear command to clear the terminal .&lt;/p&gt;

&lt;p&gt;TAB can be used to fill up in terminal. For example, You just need to type “cd Doc” and then TAB and the terminal fills the rest up and makes it “cd Documents”.&lt;/p&gt;

&lt;p&gt;Ctrl+C can be used to stop any command in terminal safely. If it doesn’t stop with that, then Ctrl+Z can be used to force stop it.&lt;/p&gt;

&lt;p&gt;You can exit from the terminal by using the exit command.&lt;/p&gt;

&lt;p&gt;You can power off or reboot the computer by using the command sudo halt and sudo reboot.&lt;/p&gt;

&lt;h5 id=&quot;for-more-commands-visit-here&quot;&gt;For more commands visit &lt;a href=&quot;https://ss64.com/bash/&quot;&gt;here&lt;/a&gt;.&lt;/h5&gt;
&lt;p&gt;These are some commands that will help you while starting in Linux terminal .&lt;/p&gt;

&lt;p&gt;Hopefully it helps you .&lt;/p&gt;

</description>
        <pubDate>Tue, 06 Nov 2018 17:10:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/06/Basic-Linux-Commands-1/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/06/Basic-Linux-Commands-1/</guid>
        
        <category>linux</category>
        
        <category>Command Line</category>
        
        <category>Basics</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>How to install Tor-Browser in Linux</title>
        <description>&lt;p&gt;In this Blog, I will be sharing a quick guide on how to install Tor-browser in your system.&lt;/p&gt;

&lt;h2 id=&quot;what-is-tor&quot;&gt;What is Tor?&lt;/h2&gt;

&lt;p&gt;The Tor software protects you by bouncing your communications around a distributed network of relays run by volunteers all around the world: it prevents somebody watching your Internet connection from learning what sites you visit, it prevents the sites you visit from learning your physical location, and it lets you access sites which are blocked.&lt;/p&gt;

&lt;p&gt;Tor Browser lets you use Tor on Microsoft Windows, Apple MacOS, or GNU/Linux without needing to install any software. It can run off a USB flash drive, comes with a pre-configured web browser to protect your anonymity, and is self-contained (portable).&lt;/p&gt;

&lt;p&gt;To know more read the official &lt;a href=&quot;https://www.torproject.org/docs/documentation.html.en&quot;&gt;Documentation&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;That’s too much of info, get me to the installation part&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-to-install-tor&quot;&gt;How to install Tor.&lt;/h2&gt;

&lt;p&gt;1) “For Kali Linux and Debian repository”&lt;/p&gt;
&lt;h4 id=&quot;sudo-apt-get-install-tor&quot;&gt;sudo apt-get install tor&lt;/h4&gt;

&lt;p&gt;2) Download and Running TOR Bundle
For this, you need a little grip of some basic Linux command like wget, cd and changing the permission of files.
So, let’s start
I) Let’s get the TOR Bundle (latest version as on 05-11-2018), we will be using “wget” tool.&lt;/p&gt;

&lt;p&gt;So, Let’s get to the terminal using ctrl+alt+t (for many Desktop environment, Defaultly setup).
Lets get to the directory where you want to install it, lets suppose Documents is the place , so the command will be &lt;em&gt;cd Documents&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now we will download the TOR bundle using wget or you can do it manually from the &lt;a href=&quot;https://www.torproject.org/download/download-easy.html.en&quot;&gt;site&lt;/a&gt; (but doing manually will Download it to the Downoads folder) , but from terminal we will use &lt;em&gt;“wget https://www.torproject.org/dist/torbrowser/8.0.3/tor-browser-linux64-8.0.3_en-US.tar.xz”&lt;/em&gt; (latest bundle as per 05/11/18) .&lt;/p&gt;

&lt;p&gt;II) Now we will extract it from the zipped filee that we just downloaded.
For that we will use &lt;em&gt;“tar -xvzf https://www.torproject.org/dist/torbrowser/8.0.3/tor-browser-linux64-8.0.3_en-US.tar.xz”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;III) Now we can see the files will be extracted to a new folder named tor-browser(tab completion completes it)
We will go to that folder using &lt;em&gt;“cd tor-browser(tab completion)”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;IV) Now by typing &lt;em&gt;“ls -la”&lt;/em&gt; , you can see a number of files in which one is “start-tor-browser.desktop”
so , to run and setup things , we will use command &lt;em&gt;“chmod +x start-tor-browser.desktop &amp;amp;&amp;amp; ./start-tor-browser.desktop “&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;chmod changes the permission of the file of start-tor-browser.desktop file.&lt;/p&gt;

&lt;h5 id=&quot;hope-it-helps-you-all&quot;&gt;Hope it helps you all.&lt;/h5&gt;

</description>
        <pubDate>Tue, 06 Nov 2018 01:30:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/06/How-to-install-tor-browser-in-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/06/How-to-install-tor-browser-in-linux/</guid>
        
        <category>Proxy</category>
        
        <category>Browser</category>
        
        <category>Tor</category>
        
        <category>Installation</category>
        
        <category>linux</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>My Journey with Tech -1</title>
        <description>&lt;p&gt;In this Blog, I will be sharing my experience and a look back of my journey from where I started.
Yeah, it’s not a technical blog but surely it’s a technical guy journey overview. 
Please read till last.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Date every technology before you get settled for one” - Anonymous&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;a-nervous-guys&quot;&gt;A nervous guys&lt;/h2&gt;

&lt;p&gt;So, this journey started in 2016 when I got admission in Amity University, I still remember the first day when we had an introduction class, where everyone was giving an intro about themselves to the teachers and I was sitting there and hearing intros. Many students have already started with technical things or have done a lot of work in their startups. And when I got the chance to speak I became nervous as, I too wanted to speak something cool I have done, but when I recall everything till that moment, I haven’t done anything great and that nervousness came to my voice and I started to stammer, although somehow I spoke about myself and where I belong and that’s it and I sat back .
But I got a reality check about my confidence plus what I have done till now. I was really nervous and wanted to do something great. Well, I was a computer student in my school, but never explored it, as I never thought that, there are many options in exploring it plus I used to stick to the syllabus for the computer. And, now it was coming back that I should have explored options and should have tried things as many had done in my class.&lt;/p&gt;

&lt;h2 id=&quot;turning-point&quot;&gt;Turning Point&lt;/h2&gt;

&lt;p&gt;The turning point in my life was a workshop by my college club on Linux and python. Well, I wanted to do something great in my life and wanted to learn technical things, so I used to attend every college club workshop, and there was one workshop which changed my life. In my class 11,12 read about &lt;a href=&quot;https://whatis.techtarget.com/definition/open-source&quot;&gt;Open Source&lt;/a&gt; and there i learnt about &lt;a href=&quot;https://www.linux.org/&quot;&gt;linux&lt;/a&gt; . So, I was really excited plus i wanted to know what is really linux. So , i went to linux workshop and there came some alumni of our college who have already ecelled and tried linux in their time and they gave a brief knowledge about linux , and really i thought i should &lt;a href=&quot;https://manas-kashyap.github.io/jekyll/2018/11/03/Why-linux/&quot;&gt;use linux&lt;/a&gt;. There i learnt about &lt;a href=&quot;https://www.python.org/&quot;&gt;python&lt;/a&gt; too , and python programming langugae really attracted me as it was really new plus compatible for me to work on .
From that day I started to use Linux and python.&lt;/p&gt;

&lt;h2 id=&quot;more-technical-things&quot;&gt;More technical things&lt;/h2&gt;

&lt;p&gt;While I was exploring things, I came to know about game developing and tried my luck there also, with &lt;a href=&quot;https://unity3d.com/&quot;&gt;unity 3D&lt;/a&gt;, then tried to design things in 3D and also 2D graphics designing using &lt;a href=&quot;https://www.photoshop.com/&quot;&gt;photoshop&lt;/a&gt; and &lt;a href=&quot;https://www.autodesk.com/education/free-software/maya&quot;&gt;Autodesk Maya&lt;/a&gt;, android development and so on,  So basically I tried my best to learn every technology I could, in this journey I encountered some super awesome seniors, and some really helpful communities when it came for open source.&lt;/p&gt;

&lt;h2 id=&quot;my-first-contribution-to-open-source&quot;&gt;My first contribution to Open Source&lt;/h2&gt;

&lt;p&gt;So, well I remember my first contribution was in a website of a technical club of my college itself where i did a minor change in the css component of the website .&lt;/p&gt;

&lt;h2 id=&quot;my-biggest-contribution&quot;&gt;My biggest contribution&lt;/h2&gt;

&lt;p&gt;To be honest, i really don’t think i have done any big contribution till now , well the contribution that made my name in Open Source contributors name is &lt;a href=&quot;http://wiki.debian.org/ManasKashyap&quot;&gt;My Debian Packaging&lt;/a&gt; and contribution to &lt;a href=&quot;http://hamaralinux.org&quot;&gt;HamaraLinux project&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;why-this-blog&quot;&gt;Why This Blog??&lt;/h2&gt;

&lt;p&gt;I am sure many readers who are going to read this blog will have one thing in mind &lt;em&gt;“Why this Blog?”&lt;/em&gt;. So, for them, the answer is I have encountered many students who are feeling very low because they don’t have any prior technical knowledge and that leads to loosing of their self-confidence.
For, those students just one kind of advice, try your best and leave the rest. I also started without any prior knowledge and yeah i am at a place where i didnt expect i will be in upcoming years. 
This blog is just to let you know yeah, you all are not alone who are starting with things now, just don’t feel low as it can create many bad thoughts in your mind, as I have encountered with those thoughts and it created really a lot of bad phase in my college journey.&lt;/p&gt;

&lt;h5 id=&quot;this-is-just-a-small-part-of-the-bigger-story-which-will-come-soon-part--1-is-this&quot;&gt;This is just a small part of the bigger story which will come soon. (Part -1 is this)&lt;/h5&gt;
&lt;h5 id=&quot;hope-it-helps-you-all-&quot;&gt;Hope it helps you all .&lt;/h5&gt;

</description>
        <pubDate>Mon, 05 Nov 2018 01:30:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/05/My-journey-with-Tech-1/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/05/My-journey-with-Tech-1/</guid>
        
        <category>linux</category>
        
        <category>Open source</category>
        
        <category>Journey</category>
        
        <category>A look back</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>Why Linux</title>
        <description>&lt;p&gt;In this Blog, I am going to answer some questions over Linux and also state why I use them.&lt;/p&gt;

&lt;p&gt;Linux is best known as the most used open source operating system.&lt;/p&gt;

&lt;p&gt;We use the term “Linux” to refer to the Linux kernel, but also the set of programs, tools, and services that are typically bundled together with the Linux kernel to provide all of the necessary components of a fully functional operating system.&lt;/p&gt;

&lt;h2 id=&quot;why-i-should-use-linux-over-windows&quot;&gt;Why I should use Linux over windows&lt;/h2&gt;

&lt;p&gt;Well i started using Linux because , first of all its &lt;a href=&quot;https://whatis.techtarget.com/definition/open-source&quot;&gt;open source&lt;/a&gt; , secondly at that time when I started using Linux is , I had an old laptop Compaq 621, with 2gb ram and intel core duo , I wanted to use new software but my laptop was 32 bit and was a not great supporter of many software, so at that time one of my friends told me to use Linux as its a lightweight OS and to my amaze it was running efficiently on my old laptop and with ease.&lt;/p&gt;

&lt;p&gt;One more reason behind my usage of Linux journey was the new look which really attracted me, yeah I wanted to feel that new look, well in windows too we have many themes and transformation pack, but I really wanted to feel the original look of Linux system.&lt;/p&gt;

&lt;p&gt;And lastly, there is strong community support for Linux over the Internet through various forums. Any question posed in forums will usually get a quick response as a lot of volunteers are online and working to solve the problems due to their passion for Linux. The paid support option is also available for commercial enterprises, with companies like Red Hat and Novell offering 24×7 support for critical applications and services.&lt;/p&gt;

&lt;h2 id=&quot;what-is-meant-by-linux-distro&quot;&gt;What is meant by Linux distro?&lt;/h2&gt;

&lt;p&gt;In the Linux world, there are hundreds of different flavors of a distro. Examples include Debian, Ubuntu and Red Hat (among many others).&lt;/p&gt;

&lt;p&gt;Technically, a distribution is any deployment of software and isn’t specifically Linux. Usually, in this case, you’ll hear it referred to as a “distribution of software.” Despite this, the term “distro” is nearly always used in a Linux context. So, while a distribution of software is a generic term for any bundle of software, a distro is nearly always a flavor of Linux.&lt;/p&gt;

&lt;h2 id=&quot;which-linux-distro-i-have-used-and-i-am-using-currently&quot;&gt;Which Linux distro I have used and I am using currently&lt;/h2&gt;

&lt;p&gt;Till date i have used many different distros of linux , i have used &lt;a href=&quot;https://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; , &lt;a href=&quot;https://linuxmint.com/&quot;&gt;Linux mint&lt;/a&gt; , &lt;a href=&quot;http://hamaralinux.org&quot;&gt;Hamara Linux&lt;/a&gt; , &lt;a href=&quot;https://www.archlinux.org/&quot;&gt;arch linux&lt;/a&gt; , &lt;a href=&quot;https://www.kali.org/&quot;&gt;kali&lt;/a&gt; , &lt;a href=&quot;https://www.debian.org&quot;&gt;Debian&lt;/a&gt; and many more.&lt;/p&gt;

&lt;p&gt;Currently, I am using &lt;a href=&quot;https://www.debian.org/releases/sid/&quot;&gt;Debian SID&lt;/a&gt; as I need my os to be updated with new packages and not to be waiting till a new release, plus I do a lot of &lt;a href=&quot;https://wiki.debian.org/Packaging&quot;&gt;Debian packaging&lt;/a&gt; and for that, I need Debian SID machine.&lt;/p&gt;

</description>
        <pubDate>Sat, 03 Nov 2018 17:30:00 +0530</pubDate>
        <link>http://localhost:4000/jekyll/2018/11/03/Why-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/2018/11/03/Why-linux/</guid>
        
        <category>linux</category>
        
        <category>Open source</category>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
